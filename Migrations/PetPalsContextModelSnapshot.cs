// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetPals.Models;

#nullable disable

namespace PetPals.Migrations
{
    [DbContext(typeof(PetPalsContext))]
    partial class PetPalsContextModelSnapshot : ModelSnapshot
    {

        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PetPals.Models.ChatRoomModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("chatroom");
                });

            modelBuilder.Entity("PetPals.Models.CommentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("CommentModelId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsReplyTo")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ParentCommentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ToPostId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CommentModelId");

                    b.HasIndex("SenderId");

                    b.HasIndex("ToPostId");

                    b.ToTable("comment");
                });

            modelBuilder.Entity("PetPals.Models.MessageModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ChatRoomModelId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ChatRoomModelId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.ToTable("message");
                });

            modelBuilder.Entity("PetPals.Models.NotificationModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<string>("LinkToItem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NotificationType")
                        .HasColumnType("integer");

                    b.Property<Guid>("RecieverId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("RecieverId");

                    b.HasIndex("SenderId");

                    b.ToTable("notification");
                });

            modelBuilder.Entity("PetPals.Models.PhotoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<int>("EntityType")
                        .HasColumnType("integer");

                    b.Property<Guid?>("PostModelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PostModelId");

                    b.ToTable("photo");
                });

            modelBuilder.Entity("PetPals.Models.PostModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("MessageModelId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Views")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MessageModelId");

                    b.HasIndex("SenderId");

                    b.ToTable("post");
                });

            modelBuilder.Entity("PetPals.Models.PostTagModel", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTagModel");
                });

            modelBuilder.Entity("PetPals.Models.TagModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TagModel");
                });

            modelBuilder.Entity("PetPals.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BannerPictureId")
                        .HasColumnType("uuid");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ChatRoomModelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProfilePictureId")
                        .HasColumnType("uuid");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("isVerified")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("BannerPictureId");

                    b.HasIndex("ChatRoomModelId");

                    b.HasIndex("ProfilePictureId");

                    b.ToTable("user");
                });

            modelBuilder.Entity("PostModelUserModel", b =>
                {
                    b.Property<Guid>("LikedPostsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LikesId")
                        .HasColumnType("uuid");

                    b.HasKey("LikedPostsId", "LikesId");

                    b.HasIndex("LikesId");

                    b.ToTable("PostUserLikes", (string)null);
                });

            modelBuilder.Entity("PostModelUserModel1", b =>
                {
                    b.Property<Guid>("SavedPostsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SavesId")
                        .HasColumnType("uuid");

                    b.HasKey("SavedPostsId", "SavesId");

                    b.HasIndex("SavesId");

                    b.ToTable("PostUserSaves", (string)null);
                });

            modelBuilder.Entity("UserModelUserModel", b =>
                {
                    b.Property<Guid>("FollowersId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FollowingsId")
                        .HasColumnType("uuid");

                    b.HasKey("FollowersId", "FollowingsId");

                    b.HasIndex("FollowingsId");

                    b.ToTable("UserModelUserModel");
                });

            modelBuilder.Entity("PetPals.Models.ChatRoomModel", b =>
                {
                    b.HasOne("PetPals.Models.UserModel", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("PetPals.Models.CommentModel", b =>
                {
                    b.HasOne("PetPals.Models.CommentModel", null)
                        .WithMany("Replies")
                        .HasForeignKey("CommentModelId");

                    b.HasOne("PetPals.Models.UserModel", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetPals.Models.PostModel", "ToPost")
                        .WithMany("Comments")
                        .HasForeignKey("ToPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sender");

                    b.Navigation("ToPost");
                });

            modelBuilder.Entity("PetPals.Models.MessageModel", b =>
                {
                    b.HasOne("PetPals.Models.ChatRoomModel", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChatRoomModelId");

                    b.HasOne("PetPals.Models.UserModel", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetPals.Models.UserModel", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("PetPals.Models.NotificationModel", b =>
                {
                    b.HasOne("PetPals.Models.UserModel", "Reciever")
                        .WithMany()
                        .HasForeignKey("RecieverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetPals.Models.UserModel", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reciever");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("PetPals.Models.PhotoModel", b =>
                {
                    b.HasOne("PetPals.Models.PostModel", null)
                        .WithMany("Photos")
                        .HasForeignKey("PostModelId");
                });

            modelBuilder.Entity("PetPals.Models.PostModel", b =>
                {
                    b.HasOne("PetPals.Models.MessageModel", null)
                        .WithMany("Photos")
                        .HasForeignKey("MessageModelId");

                    b.HasOne("PetPals.Models.UserModel", "Sender")
                        .WithMany("OwnPosts")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("PetPals.Models.PostTagModel", b =>
                {
                    b.HasOne("PetPals.Models.PostModel", "Post")
                        .WithMany("Tags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetPals.Models.TagModel", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("PetPals.Models.UserModel", b =>
                {
                    b.HasOne("PetPals.Models.PhotoModel", "BannerPicture")
                        .WithMany()
                        .HasForeignKey("BannerPictureId");

                    b.HasOne("PetPals.Models.ChatRoomModel", null)
                        .WithMany("Participants")
                        .HasForeignKey("ChatRoomModelId");

                    b.HasOne("PetPals.Models.PhotoModel", "ProfilePicture")
                        .WithMany()
                        .HasForeignKey("ProfilePictureId");

                    b.Navigation("BannerPicture");

                    b.Navigation("ProfilePicture");
                });

            modelBuilder.Entity("PostModelUserModel", b =>
                {
                    b.HasOne("PetPals.Models.PostModel", null)
                        .WithMany()
                        .HasForeignKey("LikedPostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetPals.Models.UserModel", null)
                        .WithMany()
                        .HasForeignKey("LikesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PostModelUserModel1", b =>
                {
                    b.HasOne("PetPals.Models.PostModel", null)
                        .WithMany()
                        .HasForeignKey("SavedPostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetPals.Models.UserModel", null)
                        .WithMany()
                        .HasForeignKey("SavesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserModelUserModel", b =>
                {
                    b.HasOne("PetPals.Models.UserModel", null)
                        .WithMany()
                        .HasForeignKey("FollowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetPals.Models.UserModel", null)
                        .WithMany()
                        .HasForeignKey("FollowingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetPals.Models.ChatRoomModel", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Participants");
                });

            modelBuilder.Entity("PetPals.Models.CommentModel", b =>
                {
                    b.Navigation("Replies");
                });

            modelBuilder.Entity("PetPals.Models.MessageModel", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("PetPals.Models.PostModel", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Photos");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("PetPals.Models.TagModel", b =>
                {
                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("PetPals.Models.UserModel", b =>
                {
                    b.Navigation("OwnPosts");
                });
#pragma warning restore 612, 618
        }
    }
}
